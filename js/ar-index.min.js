var rootPath = "https://www.aoshima-bk.co.jp/special/webar/"; var arType = 1; (function () { document.addEventListener("touchmove", function (u) { u.preventDefault() }, { passive: false }); window.addEventListener("orientationchange", q, false); var d = o(); if (((navigator.userAgent.indexOf("iPhone") > 0 || navigator.userAgent.indexOf("Android") > 0) && navigator.userAgent.indexOf("Mobile") > 0) || navigator.userAgent.indexOf("iPad") > 0 || navigator.userAgent.indexOf("Android") > 0) { if (navigator.userAgent.indexOf("iPhone") > 0) { if (iosVersion() >= 11) { if (navigator.userAgent.indexOf("CriOS") > 0) { h("【Safari】をご使用下さい。") } } else { h("このバージョンのiOSは対応していません。iOS11以上をご使用下さい。") } } else { if (navigator.userAgent.indexOf("iPad") > 0) { if (iosVersion() >= 13) { if (navigator.userAgent.indexOf("Safari") < 0) { h("【Safari】をご使用下さい。") } } else { h("このバージョンのiOSは対応していません。iOS11以上をご使用下さい。") } } else { if (navigator.userAgent.indexOf("Android") > 0 && navigator.userAgent.indexOf("Mobile") < 0 && navigator.userAgent.indexOf("Chrome") < 0) { h("【Android Chrome】をご使用下さい。") } } } var r = new Date(); var f = r.getFullYear(); var s = r.getMonth() + 1; var l = r.getDate(); s = ("0" + s).slice(-2); l = ("0" + l).slice(-2); if (!!(d.ed)) { if (parseInt(d.ed.toString(), 16).toString(10) < (f + s + l).toString()) { h("表示期限が終了しているため、表示することができません。"); return } } } else { if (!(d.debug)) { h("パソコンで表示することはできません。"); retuern } } function k() { if (1 < document.location.search.length) { var y = document.location.search.substring(1); var x = y.split("&"); var u = new Object(); for (var w = 0; w < x.length; w++) { var v = x[w].split("="); var z = decodeURIComponent(v[0]); var A = decodeURIComponent(v[1]); u[z] = decodeURIComponent(A) } return u } return null } function o() { var v = location.search.substring(1); var w = []; if (v) { var x = v.split("&"); for (i = 0; i < x.length; i++) { var u = x[i].split("="); w[u[0]] = u[1] } } return w } function t() { document.addEventListener("mousewheel", m, { passive: false }); document.addEventListener("touchmove", g, { passive: false }); document.addEventListener("keydown", e, { passive: false }); document.body.style.overflow = "hidden" } function p() { document.removeEventListener("mousewheel", m, { passive: false }); document.removeEventListener("touchmove", g, { passive: false }); document.removeEventListener("keydown", e, { passive: false }); document.body.style.overflow = "visible" } function m(u) { u.preventDefault() } function g(u) { u.preventDefault() } function e(u) { switch (u.keyCode) { case 37: case 38: case 39: case 40: u.preventDefault(); break } } function b() { const w = window.innerWidth; const u = window.innerHeight; var x = new THREE.WebGLRenderer({ antialias: true }); x.setPixelRatio(window.devicePixelRatio); x.setSize(w, u); var v = new THREE.Camera(); v.aspect = w / u; x.setSize(w, u) } function h(u) { window.alert(u); location.href = "warning.html" } function q() { switch (window.orientation) { case 0: a("Vertical"); break; case -90: a("Horizontal"); break; case 90: a("Horizontal"); break; case 180: a("Vertical"); break } } function a(u) { if (u == "Horizontal") { document.getElementById("swUp").style.display = "none"; document.getElementById("swDown").style.display = "none"; document.getElementById("swR90").style.display = "none"; document.getElementById("swR00").style.display = "none" } else { if (u == "Vertical") { document.getElementById("swUp").style.display = "inline"; document.getElementById("swDown").style.display = "inline"; document.getElementById("swR90").style.display = "inline"; document.getElementById("swR00").style.display = "inline" } } } function j() { var w = document.getElementById("camera-wrapper"); var v = document.getElementById("camera"); var u = v.getAttribute("rotation").x; var B = v.getAttribute("rotation").y; var A = v.getAttribute("rotation").z; if (!isNaN(u) && !isNaN(B) && !isNaN(A)) { w.setAttribute("rotation", { y: -1 * B }) } } function n(u) { if (u.requestFullScreen) { u.requestFullScreen() } else { if (u.webkitRequestFullScreen) { u.webkitRequestFullScreen() } else { if (u.mozRequestFullScreen) { u.mozRequestFullScreen() } else { if (u.msRequestFullScreen) { u.msRequestFullScreen() } } } } } function c(u) { if (screen.orientation.lock) { screen.orientation.lock(u) } else { if (screen.lockOrientation) { screen.lockOrientation(u) } else { if (screen.webkitLockOrientation) { screen.webkitLockOrientation(u) } else { if (screen.mozLockOrientation) { screen.mozLockOrientation(u) } else { if (screen.msLockOrientation) { screen.msLockOrientation(u) } } } } } } }()); function GetFileType(a) { var b = "png"; switch (a) { case "g": return "gif"; break; case "v": return "mp4"; break; case "d": return "gltf"; break; case "p": return "png"; break } return b } function GetDefaultSize(c, b) { var a = "2020"; if (!c) { if (b != "mp4") { a = "2020" } else { a = "2011" } } else { if (b != "mp4") { a = "2020" } else { a = "2011" } } return a } function SizeSplit(b) { var a = "20,20"; switch ((parseInt(b).toString(10)).length) { case 2: a = b && (parseInt(b).toString(10)).match(/.{1}/g); break; case 4: a = b && (parseInt(b).toString(10)).match(/.{2}/g); break; case 6: a = b && (parseInt(b).toString(10)).match(/.{3}/g); break; case 8: a = b && (parseInt(b).toString(10)).match(/.{4}/g); break; case 10: a = b && (parseInt(b).toString(10)).match(/.{5}/g); break; default: a = b && (parseInt(b).toString(10)).match(/.{1}/g); break } return a } function loadscriptheader(b) { var a = document.createElement("script"); a.type = "text/javascript"; a.src = b; document.head.appendChild(a) } function loadscriptbody(b) { var a = document.createElement("script"); a.type = "text/javascript"; a.src = b; document.body.appendChild(a) } function loadscript(d, c) { var a = document.createElement("script"); a.type = "text/javascript"; a.src = d; var b = document.getElementById(c); b.parentNode.insertBefore(a, b) } function loadARScript() { var a = "js/ar-view1.js"; if (arType == 2) { a = "js/nft-view.js" } else { if (arType == 1) { a = "js/ar-view1.js" } } loadscriptbody(a, "version") };